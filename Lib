local Library = {}

local gui = Instance.new("ScreenGui")
gui.Parent = game:GetService("CoreGui")
print("lib")
local function addCorner(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius)
    corner.Parent = instance
end

function Library:CreateUI(title, description)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = gui
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 670, 0, 360)
    MainFrame.Position = UDim2.new(0.5, -350, 0.5, -200)
    MainFrame.BackgroundColor3 = Color3.fromRGB(32, 26, 20)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    addCorner(MainFrame, 7)
    MainFrame.Active = true
    MainFrame.Draggable = true

local existingGui = game:GetService("CoreGui"):FindFirstChild("mygui")
if existingGui then return end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "mygui"
screenGui.Parent = game:GetService("CoreGui")

local button = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local clickSound = Instance.new("Sound")

button.Name = "Button"
button.Size = UDim2.new(0, 50, 0, 50)
button.Position = UDim2.new(0.12, 0, 0.1, 0)
button.Text = "OFF"
button.Font = Enum.Font.Gotham
button.TextSize = 14
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
button.BackgroundTransparency = 0.3
button.Draggable = true
button.BorderSizePixel = 0
button.Parent = screenGui

UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = button

clickSound.SoundId = "rbxassetid://1673280232"
clickSound.Parent = button

local isActive = false

local function toggleButton()
    isActive = not isActive
    if isActive then
        button.Text = ""
        button.BackgroundColor3 = Color3.fromRGB(173, 216, 230)
    else
        button.Text = ""
        button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    end

    MainFrame.Visible = isActive
    clickSound:Play()

    button:TweenSize(UDim2.new(0, 70, 0, 60), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    wait(0.2)
    button:TweenSize(UDim2.new(0, 60, 0, 50), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
end

button.MouseButton1Click:Connect(toggleButton)
 
    
    local TopBar = Instance.new("Frame")
TopBar.Size = UDim2.new(1, 0, 0, 30)
TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TopBar.BorderSizePixel = 0
TopBar.ZIndex = 10
TopBar.Parent = MainFrame
addCorner(TopBar, 5)
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(0, 150, 1, 0)
    TitleLabel.Position = UDim2.new(0, 5, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.ZIndex = 11
    TitleLabel.TextSize = 16
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Font = Enum.Font.SourceSans
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TopBar
    
    local DescriptionLabel = Instance.new("TextLabel")
    DescriptionLabel.Size = UDim2.new(0, 100, 1, 0)
    DescriptionLabel.Position = UDim2.new(1, -180, 0, 0)
    DescriptionLabel.BackgroundTransparency = 1
    DescriptionLabel.Text = description
    DescriptionLabel.TextSize = 14
    DescriptionLabel.ZIndex = 11
    DescriptionLabel.TextColor3 = Color3.fromRGB(213, 195, 181)
    DescriptionLabel.Font = Enum.Font.SourceSans
    DescriptionLabel.TextXAlignment = Enum.TextXAlignment.Left
    DescriptionLabel.Parent = TopBar
    
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 20, 1, 0)
    MinimizeButton.Position = UDim2.new(1, -50, 0, 0)
    MinimizeButton.BackgroundTransparency = 1
    MinimizeButton.Text = "-"
    MinimizeButton.ZIndex = 11
    MinimizeButton.TextSize = 16
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.Font = Enum.Font.SourceSans
    MinimizeButton.Parent = TopBar
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 20, 1, 0)
    CloseButton.Position = UDim2.new(1, -25, 0, 0)
    CloseButton.BackgroundTransparency = 1
    CloseButton.Text = "X"
    CloseButton.ZIndex = 11
    CloseButton.TextSize = 16
    CloseButton.TextColor3 = Color3.fromRGB(255, 100, 100)
    CloseButton.Font = Enum.Font.SourceSans
    CloseButton.Parent = TopBar
    
    local TabsContainer = Instance.new("ScrollingFrame")
    TabsContainer.Size = UDim2.new(0.3, 0, 1, -30)
    TabsContainer.Position = UDim2.new(0, 0, 0, 30)
    TabsContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TabsContainer.BorderSizePixel = 0
    TabsContainer.CanvasSize = UDim2.new(0, 0, 20, 0)
    TabsContainer.ScrollBarThickness = 1
    TabsContainer.Parent = MainFrame
    addCorner(TabsContainer, 5)
    
    local TabsListLayout = Instance.new("UIListLayout")
    TabsListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabsListLayout.Padding = UDim.new(0, 7)
    TabsListLayout.Parent = TabsContainer
    
    local Container = Instance.new("Frame")
Container.Size = UDim2.new(0.7, 0, 1, -35)
Container.Position = UDim2.new(0.3, 0, 0, 30)
Container.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Container.BorderSizePixel = 0
Container.Parent = MainFrame
    addCorner(Container, 5)
    
    local ContainerListLayout = Instance.new("UIListLayout")
    ContainerListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContainerListLayout.Padding = UDim.new(0, 5)
    ContainerListLayout.Parent = Container
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    local isMinimized = false
    local normalSize = MainFrame.Size
    MinimizeButton.MouseButton1Click:Connect(function()
        if isMinimized then
            MainFrame.Size = normalSize
            isMinimized = false
        else
            MainFrame.Size = UDim2.new(0, 700, 0, 30)
            isMinimized = true
        end
    end)
    
    local UIInstance = {TabsContainer = TabsContainer, Container = Container}
    
function UIInstance:AddTab(tabName)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, -10, 0, 40)
    tabButton.Text = tabName
    tabButton.Font = Enum.Font.GothamBold
    tabButton.TextSize = 14
    tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.BackgroundTransparency = 0.4
    tabButton.Parent = TabsContainer
    addCorner(tabButton, 5)
    
    local tabFrame = Instance.new("Frame")
    tabFrame.Size = UDim2.new(1, 0, 1, -15)
    tabFrame.Position = UDim2.new(0, 0, 0, 80)
    tabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabFrame.BackgroundTransparency = 0.3
    tabFrame.Visible = true
    tabFrame.Parent = Container
    addCorner(tabFrame, 5)
    
    local frameScroll = Instance.new("ScrollingFrame")
    frameScroll.Size = UDim2.new(1, -10, 1, -10)
    frameScroll.Position = UDim2.new(0, 5, 0, 5)
    frameScroll.CanvasSize = UDim2.new(0, 0, 20, 0)
    frameScroll.ScrollBarThickness = 1
    frameScroll.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    frameScroll.BackgroundTransparency = 0.2
    frameScroll.ScrollingDirection = Enum.ScrollingDirection.Y
    frameScroll.Parent = tabFrame
    addCorner(frameScroll, 5)
    
    local buttonLayout = Instance.new("UIListLayout")
    buttonLayout.Padding = UDim.new(0, 7)
    buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
    buttonLayout.Parent = frameScroll
    
    tabButton.MouseButton1Click:Connect(function()
        for _, button in pairs(TabsContainer:GetChildren()) do
            if button:IsA("TextButton") then
                button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            end
        end
        tabButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        
        for _, frame in pairs(Container:GetChildren()) do -- un error
            if frame:IsA("Frame") then
                frame.Visible = false
            end
        end
        tabFrame.Visible = true
    end)
    
    return frameScroll
end
    
    return UIInstance
end

function Library.addButton(container, buttonText, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 40)
    button.Text = buttonText
    button.TextSize = 12
    button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundTransparency = 0.4
    button.Parent = container
    addCorner(button, 5)
    button.MouseButton1Click:Connect(callback)
    return button
end
function Library.AddColorPicker(container, labelText, defaultColor, callback)
    local ColorPicker = Instance.new("Frame")
    ColorPicker.Size = UDim2.new(1, -10, 0, 45)
    ColorPicker.BackgroundTransparency = 0.1
    ColorPicker.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    ColorPicker.Parent = container
    addCorner(ColorPicker, 5)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.3, 0, 1, 0)
    label.Text = labelText
    label.Position = UDim2.new(0, 10, 0, 0)
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.Parent = ColorPicker

    local pickerFrame = Instance.new("Frame")
    pickerFrame.Size = UDim2.new(0, 140, 0, 30)
    pickerFrame.Position = UDim2.new(0, 310, 0, 5)
    pickerFrame.BackgroundColor3 = defaultColor or Color3.fromRGB(255, 255, 255)
    pickerFrame.BackgroundTransparency = 0.1
    pickerFrame.BorderSizePixel = 2
    pickerFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
    pickerFrame.Parent = ColorPicker
    addCorner(pickerFrame, 6)

    local openButton = Instance.new("TextButton")
    openButton.Size = UDim2.new(1, 0, 1, 0)
    openButton.Text = ""
    openButton.BackgroundTransparency = 1
    openButton.Parent = pickerFrame

    local colorPickerPopup = Instance.new("Frame")
    colorPickerPopup.Size = UDim2.new(0, 180, 0, 200)
    colorPickerPopup.Position = UDim2.new(0.5, -150, 0.5, -75)
    colorPickerPopup.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    colorPickerPopup.Visible = false
    colorPickerPopup.BorderSizePixel = 2
    colorPickerPopup.BorderColor3 = Color3.fromRGB(100, 100, 100)
    colorPickerPopup.Parent = container
    addCorner(colorPickerPopup, 8)

    local colorWheel = Instance.new("ImageLabel")
    colorWheel.Size = UDim2.new(0, 150, 0, 150)
    colorWheel.Position = UDim2.new(0.5, -75, 0, 10)
    colorWheel.Image = "rbxassetid://142488478"
    colorWheel.BackgroundTransparency = 1
    colorWheel.Active = true
    colorWheel.Parent = colorPickerPopup

    local colorSelector = Instance.new("Frame")
    colorSelector.Size = UDim2.new(0, 10, 0, 10)
    colorSelector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    colorSelector.BorderSizePixel = 2
    colorSelector.Parent = colorWheel
    addCorner(colorSelector, 5)

    local confirmButton = Instance.new("TextButton")
    confirmButton.Size = UDim2.new(0.5, -5, 0, 30)
    confirmButton.Position = UDim2.new(0, 5, 1, -40)
    confirmButton.Text = "Confirm"
    confirmButton.Font = Enum.Font.Gotham
    confirmButton.TextSize = 14
    confirmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    confirmButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    confirmButton.BorderSizePixel = 0
    confirmButton.Parent = colorPickerPopup
    addCorner(confirmButton, 5)

    local rainbowButton = Instance.new("TextButton")
    rainbowButton.Size = UDim2.new(0.5, -5, 0, 30)
    rainbowButton.Position = UDim2.new(0.5, 0, 1, -40)
    rainbowButton.Text = "Rainbow"
    rainbowButton.Font = Enum.Font.Gotham
    rainbowButton.TextSize = 14
    rainbowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    rainbowButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    rainbowButton.BorderSizePixel = 0
    rainbowButton.Parent = colorPickerPopup
    addCorner(rainbowButton, 5)

    local rainbowActive = false
    local rainbowConnection

    local function updateColor(input)
        local mousePosition = input.Position
        local relativePosition = colorWheel.AbsolutePosition
        local x = (mousePosition.X - relativePosition.X) / colorWheel.AbsoluteSize.X
        local y = (mousePosition.Y - relativePosition.Y) / colorWheel.AbsoluteSize.Y
        x = math.clamp(x, 0, 1)
        y = math.clamp(y, 0, 1)

        colorSelector.Position = UDim2.new(x, -5, y, -5)
        pickerFrame.BackgroundColor3 = Color3.fromHSV(x, 1 - y, 1)

        if callback then
            callback(pickerFrame.BackgroundColor3)
        end
    end

    colorWheel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            updateColor(input)
            local connection
            connection = game:GetService("UserInputService").InputChanged:Connect(function(moveInput)
                if moveInput.UserInputType == Enum.UserInputType.MouseMovement or moveInput.UserInputType == Enum.UserInputType.Touch then
                    updateColor(moveInput)
                end
            end)

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    connection:Disconnect()
                end
            end)
        end
    end)

    confirmButton.MouseButton1Click:Connect(function()
        colorPickerPopup.Visible = false
        if callback then
            callback(pickerFrame.BackgroundColor3)
        end
    end)

    rainbowButton.MouseButton1Click:Connect(function()
        rainbowActive = not rainbowActive
        rainbowButton.BackgroundColor3 = rainbowActive and Color3.fromRGB(60, 0, 120) or Color3.fromRGB(25, 25, 25)

        if rainbowActive then
            local step = 0
            rainbowConnection = game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
                step = (step + deltaTime * 0.1) % 1
                local color = Color3.fromHSV(step, 1, 1)
                pickerFrame.BackgroundColor3 = color
                
                if callback then
                    callback(color)
                end
            end)
        else
            if rainbowConnection then
                rainbowConnection:Disconnect()
                rainbowConnection = nil
            end
        end
    end)

    openButton.MouseButton1Click:Connect(function()
        colorPickerPopup.Visible = not colorPickerPopup.Visible
    end)

    return ColorPicker
end
function Library.addToggle(container, labelText, defaultState, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, 0, 0, 40)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    toggleFrame.BackgroundTransparency = 0.6
    toggleFrame.Parent = container

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(1, -60, 1, 0)
    toggleLabel.Position = UDim2.new(0, 10, 0, 0)
    toggleLabel.Text = labelText
    toggleLabel.TextSize = 11
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 45, 0, 25)
    toggleButton.Position = UDim2.new(1, -70, 0.5, -10)
    toggleButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    toggleButton.Text = ""
    toggleButton.AutoButtonColor = false
    toggleButton.Parent = toggleFrame
    addCorner(toggleButton, 9)

    local toggleIndicator = Instance.new("Frame")
    toggleIndicator.Size = UDim2.new(0, 15, 0, 15)
    toggleIndicator.Parent = toggleButton
    addCorner(toggleIndicator, 6)

    local function updateToggle(state)
        toggleIndicator:TweenPosition(
            UDim2.new(state and 1 or 0, state and -20 or 2, 0.5, -9),
            Enum.EasingDirection.Out,
            Enum.EasingStyle.Quad,
            0.2,
            true
        )
        toggleIndicator.BackgroundColor3 = state and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
        callback(state)
    end

    toggleButton.MouseButton1Click:Connect(function()
        defaultState = not defaultState
        updateToggle(defaultState)
    end)

    updateToggle(defaultState)

    return toggleFrame
end

function Library.addSlider(container, name, minValue, maxValue, defaultValue, increment, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, 0, 0, 40)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    sliderFrame.BackgroundTransparency = 0.6
    sliderFrame.Parent = container
    addCorner(sliderFrame, 5)

    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(0, 100, 0, 20)
    sliderLabel.Position = UDim2.new(0, 10, 0, 5)
    sliderLabel.Text = name .. ": " .. defaultValue
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.TextSize = 14
    sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Parent = sliderFrame

    local sliderTrack = Instance.new("Frame")
    sliderTrack.Size = UDim2.new(1, -20, 0, 5)
    sliderTrack.Position = UDim2.new(0, 2, 0, 35)
    sliderTrack.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderTrack.Parent = sliderFrame
    addCorner(sliderTrack, 5)

    local sliderThumb = Instance.new("Frame")
    sliderThumb.Size = UDim2.new(0, 10, 0, 15)
    sliderThumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderThumb.Parent = sliderTrack
    addCorner(sliderThumb, 5)

    local function round(value, decimalPlaces)
        local factor = 10 ^ decimalPlaces
        return math.floor(value * factor + 0.5) / factor
    end

    local function updateSlider(input)
        local mousePosition = input.Position
        local relativePosition = sliderTrack.AbsolutePosition
        local x = (mousePosition.X - relativePosition.X) / sliderTrack.AbsoluteSize.X
        x = math.clamp(x, 0, 1)

        local rawValue = minValue + (maxValue - minValue) * x
        local value = round(rawValue - (rawValue % increment), 2)

        value = math.clamp(value, minValue, maxValue)

        local thumbPosition = (value - minValue) / (maxValue - minValue)
        sliderThumb.Position = UDim2.new(thumbPosition, -5, 0.5, -7.5)
        sliderLabel.Text = name .. ": " .. value
        callback(value)
    end

    sliderTrack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            updateSlider(input)
            local connection
            connection = input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    connection:Disconnect()
                else
                    updateSlider(input)
                end
            end)
        end
    end)

    local initialValue = round(defaultValue - (defaultValue % increment), 2)
    local initialX = (initialValue - minValue) / (maxValue - minValue)
    sliderThumb.Position = UDim2.new(initialX, -5, 0.5, -7.5)
    sliderLabel.Text = name .. ": " .. initialValue
end

function Library.addDropdown(container, labelText, options, callback)
    local Dropdown = Instance.new("Frame")
    Dropdown.Size = UDim2.new(1, 0, 0, 40)
    Dropdown.BackgroundTransparency = 0.6
    Dropdown.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Dropdown.Parent = container
    addCorner(Dropdown, 5)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.3, 0, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Text = labelText
    label.Font = Enum.Font.Gotham
    label.TextSize = 11
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = Dropdown

    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(0.5, 0, 1, 0)
    dropdownFrame.Position = UDim2.new(0.5, 0, 0, 0)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    dropdownFrame.Parent = Dropdown
    addCorner(dropdownFrame, 5)

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Size = UDim2.new(1, 0, 1, 0)
    dropdownButton.Text = "Seleccionar"
    dropdownButton.Font = Enum.Font.Gotham
    dropdownButton.TextSize = 12
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    dropdownButton.Parent = dropdownFrame
    addCorner(dropdownButton, 5)

    local dropdownList = Instance.new("Frame")
    dropdownList.Size = UDim2.new(1, 0, 0, #options * 35)
    dropdownList.Position = UDim2.new(0, 0, 1, 5)
    dropdownList.Visible = false
    dropdownList.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    dropdownList.ClipsDescendants = true
    dropdownList.Parent = dropdownFrame
    addCorner(dropdownList, 5)

    local dropdownLayout = Instance.new("UIListLayout")
    dropdownLayout.Parent = dropdownList
    dropdownLayout.Padding = UDim.new(0, 2)

    dropdownButton.MouseButton1Click:Connect(function()
        dropdownList.Visible = not dropdownList.Visible
    end)

    for _, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Size = UDim2.new(1, 0, 0, 35)
        optionButton.Text = option
        optionButton.Font = Enum.Font.Gotham
        optionButton.TextSize = 14
        optionButton.ZIndex = 4
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        optionButton.Parent = dropdownList
        addCorner(optionButton, 4)

        optionButton.MouseEnter:Connect(function()
            optionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        end)

        optionButton.MouseLeave:Connect(function()
            optionButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        end)

        optionButton.MouseButton1Click:Connect(function()
            dropdownButton.Text = option
            dropdownList.Visible = false
            if callback then
                callback(option)
            end
        end)
    end
end

function Library.addTextbox(container, labelText, placeholderText, defaultText, callback)
    local textboxFrame = Instance.new("Frame")
    textboxFrame.Size = UDim2.new(1, 0, 0, 40)
    textboxFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    textboxFrame.BackgroundTransparency = 0.6
    textboxFrame.Parent = container

    if addCorner then
        addCorner(textboxFrame, 5)
    end

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 100, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Text = labelText
    label.TextSize = 12
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.Parent = textboxFrame

    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(0.4, 0, 1, 0)
    textBox.Position = UDim2.new(0.6, 0, 0, 0)
    textBox.Text = defaultText
    textBox.PlaceholderText = placeholderText
    textBox.Font = Enum.Font.Gotham
    textBox.TextSize = 14
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.BackgroundColor3 = Color3.fromRGB(25, 26, 25)
    textBox.Parent = textboxFrame

    if addCorner then
        addCorner(textBox, 5)
    end

    textBox.FocusLost:Connect(function(enterPressed)
        if enterPressed and callback then
            callback(textBox.Text)
        end
    end)
end

function Library.addParagraph(container, text)
    local paragraphFrame = Instance.new("Frame")
    paragraphFrame.Size = UDim2.new(1, 0, 0, 40)
    paragraphFrame.BackgroundTransparency = 1
    paragraphFrame.Parent = container

    local paragraphLabel = Instance.new("TextLabel")
    paragraphLabel.Size = UDim2.new(1, -20, 1, 0)
    paragraphLabel.Position = UDim2.new(0, 10, 0, 0)
    paragraphLabel.Text = text
    paragraphLabel.TextWrapped = true
    paragraphLabel.TextScaled = false
    paragraphLabel.TextSize = 13
    paragraphLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    paragraphLabel.BackgroundTransparency = 1
    paragraphLabel.TextXAlignment = Enum.TextXAlignment.Left
    paragraphLabel.TextYAlignment = Enum.TextYAlignment.Top
    paragraphLabel.Parent = paragraphFrame
end

function Library.addSection(container, title)
    local section = Instance.new("Frame")
    section.Size = UDim2.new(1, 0, 0, 40)
    section.BackgroundTransparency = 0.1
    section.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    section.Parent = container

    local sectionLabel = Instance.new("TextLabel")
    sectionLabel.Size = UDim2.new(0, 200, 1, 0)
    sectionLabel.Position = UDim2.new(0.5, -100, 0, 0)
    sectionLabel.Text = title or "Section"
    sectionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    sectionLabel.Font = Enum.Font.GothamBold
    sectionLabel.TextSize = 13
    sectionLabel.BackgroundTransparency = 1
    sectionLabel.TextXAlignment = Enum.TextXAlignment.Center
    sectionLabel.Parent = section
end

function Library.addLabel(container, text)
    local labelFrame = Instance.new("Frame")
    labelFrame.Size = UDim2.new(1, 0, 0, 40)
    labelFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    labelFrame.BackgroundTransparency = 0.8
    labelFrame.Parent = container

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 1, -10)
    label.Position = UDim2.new(0, 5, 0, 5)
    label.Text = text
    label.Font = Enum.Font.GothamBold
    label.TextSize = 12
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.Parent = labelFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = labelFrame
end

return Library
